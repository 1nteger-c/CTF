
from Crypto.Util.number import *

load("small_roots.sage")

p = 86160765871200393116432211865381287556448879131923154695356172713106176601077
b = 71198163834256441900788553646474983932569411761091772746766420811695841423780
m = 88219145192729480056743197897921789558305761774733086829638493717397473234815
w0 = 401052873479535541023317092941219339820731562526505
w1 = 994046339364774179650447057905749575131331863844814
Fp = Zmod(p)
P.<v> = PolynomialRing(Fp)

F = v^2 + b
Pr.<x,y> = PolynomialRing(Zmod(p))
f = (y+w1*pow(2, 85))-(x+w0*pow(2, 85)) ^ 2-b
res = small_roots(f, (2 ^ 85, 2 ^ 85))
print(res)
x0 = res[0][0]
x1 = res[0][1]
v0 = (w0<<85) + x0
v1 = (w1<<85) + x1
v = v1

for i in range(5):
    v = F(v)
    m ^^= int(v)
print(long_to_bytes(m))